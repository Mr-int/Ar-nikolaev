import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import '../redirect.css';

const linkMapDay = new Map([
  ['nikolaev', 'https://xr.mix-ar.ru/q?id=2776'],
  ['gagarin', 'http://example.com/gagarin'],
  ['turing', 'http://example.com/turing'],
]);
const linkMapNight = new Map([
  ['nikolaev', 'https://xr.mix-ar.ru/q?id=2912'],
  ['gagarin', 'http://example.com/gagarin'],
  ['turing', 'http://example.com/turing'],
]);

const Redirect = () => {
  const { name } = useParams();
  const [link, setLink] = useState('#');
  const [label, setLabel] = useState('–û–∂–∏–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é');
  const [monumentName, setMonumentName] = useState('');

  useEffect(() => {
    const hours = new Date().getHours();
    let url = '#';
    let text = '–û–∂–∏–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é';
    let name = '';
    
    if (hours >= 6 && hours < 20 && linkMapDay.has(name)) {
      url = linkMapDay.get(name);
      text = '–û–∂–∏–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é';
    } else if ((hours < 6 || hours >= 20) && linkMapNight.has(name)) {
      url = linkMapNight.get(name);
      text = '–û–∂–∏–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é';
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–Ω–∏–∫–∞
    switch (name) {
      case 'nikolaev':
        name = '–ù–∏–∫–æ–ª–∞–µ–≤';
        break;
      case 'gagarin':
        name = '–ì–∞–≥–∞—Ä–∏–Ω';
        break;
      case 'turing':
        name = '–¢—å—é—Ä–∏–Ω–≥';
        break;
      default:
        name = '–ü–∞–º—è—Ç–Ω–∏–∫';
    }
    
    setLink(url);
    setLabel(text);
    setMonumentName(name);

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–≤—ë–∑–¥ –Ω–æ—á—å—é
    if (hours >= 20 || hours < 6) {
      createStars();
    }
  }, [name]);

  function createStars() {
    if (document.querySelector('.stars')) return;
    const starsContainer = document.createElement('div');
    starsContainer.classList.add('stars');
    document.body.appendChild(starsContainer);
    for (let i = 0; i < 100; i++) {
      const star = document.createElement('div');
      star.classList.add('star');
      star.style.top = Math.random() * 100 + 'vh';
      star.style.left = Math.random() * 100 + 'vw';
      star.style.animationDelay = Math.random() * 5 + 's';
      starsContainer.appendChild(star);
    }
  }

  return (
    <div className="white-block">
      <div className="ar-header">
        <a href="/" className="back-btn">–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥</a>
      </div>
      
      <div className="ar-hero">
        <div className="ar-icon">üì∑</div>
        <h2>AR {monumentName}</h2>
        <p className="ar-subtitle">
          –û–∂–∏–≤–∏—Ç–µ –ø–∞–º—è—Ç–Ω–∏–∫ —Å –ø–æ–º–æ—â—å—é –¥–æ–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏
        </p>
      </div>
      
      <div className="instruction-block">
        <div className="iphone-note">
          <span className="iphone-label">iPhone</span> –û—Ç–∫—Ä–æ–π—Ç–µ —Å–∞–π—Ç —á–µ—Ä–µ–∑ Safari –¥–ª—è –ª—É—á—à–µ–≥–æ –æ–ø—ã—Ç–∞
        </div>
        
        <ol>
          <li>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–û–∂–∏–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é¬ª –Ω–∏–∂–µ</li>
          <li>–í –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è —Å–∞–π—Ç–µ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´View¬ª</li>
          <li>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ MixAR, –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è</li>
          <li>–í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ</li>
          <li>–ù–∞–≤–µ–¥–∏—Ç–µ –∫–∞–º–µ—Ä—É –Ω–∞ –ø–∞–º—è—Ç–Ω–∏–∫ –∏ —Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ –æ–Ω –æ–∂–∏–≤–∞–µ—Ç!</li>
        </ol>
      </div>
      
      <div className="ar-action">
        <a href={link} className="cta-button ar-button btn-pulse" id="ar-button">
          {label}
        </a>
      </div>
    </div>
  );
};

export default Redirect; 